---
- name: Provision the infrastructure
  hosts: controller
  vars_files:
  - '{{ playbook_dir }}/vars/defaults.yml'
  roles:
    # The provisioner role consumes the terraform adjacent to the playbook
    # and exports the created ec2_instances to inventory, while also registering
    # the other outputs from the terraform module for use later in the playbook
  - role: provisioner

- name: Wait for connectivity to all terraformed hosts
  hosts: terraformed
  vars_files:
  - '{{ playbook_dir }}/vars/defaults.yml'
  gather_facts: false
  roles:
  - role: cloud_init_finished

- name: Update all connected terraformed hosts
  hosts: connected
  vars_files:
  - '{{ playbook_dir }}/vars/defaults.yml'
  roles:
  - role: updated

- name: Configure Red Hat Quay
  hosts: registry
  vars_files:
  - '{{ playbook_dir }}/vars/defaults.yml'
  vars:
    registry_bucket: '{{ hostvars.controller.terraform.outputs.registry_bucket.value }}'
  roles:
  - role: trusts_proxy
  - role: redhat_quay
    vars:
      registry_hostname: '{{ ansible_host }}'
      registry_storage_details:
        host: s3.{{ registry_bucket.region }}.amazonaws.com
        s3_bucket: '{{ registry_bucket.bucket }}'
        s3_access_key: '{{ registry_bucket.access_key }}'
        s3_secret_key: '{{ registry_bucket.secret_key }}'
      password_dir: '{{ output_dir }}/quay_passwords'
      cert_style: byo
      registry_certificate: '{{ lookup("file", output_dir+"/registry.crt") }}'
      registry_certificate_key: '{{ lookup("file", output_dir+"/registry.key") }}'

- name: Configure Squid
  hosts: proxy
  vars_files:
  - '{{ playbook_dir }}/vars/defaults.yml'
  become: true
  vars:
    ca_cert_and_key: '{{ hostvars.controller.ca.stdout }}'
    allowed_urls:
    - .{{ cluster_name }}.{{ cluster_domain }}
    - .rhui3.{{ aws_region }}.aws.ce.redhat.com
  roles:
  - role: proxy

- name: Validate bastion configuration
  hosts: bastion
  vars_files:
  - '{{ playbook_dir }}/vars/defaults.yml'
  become: true
  roles:
  - role: trusts_proxy
  - role: updated
  tasks:
  - name: Install container-tools
    dnf:
      name: '@container-tools'
      state: installed
  - name: Login to quay registry to validate connection
    containers.podman.podman_login:
      username: '{{ registry_admin.username }}'
      password: '{{ registry_admin.password }}'
      registry: '{{ hostvars.registry.ansible_host }}'

- name: Download clients and mirror installation on connected host
  hosts: registry
  vars_files:
  - '{{ playbook_dir }}/vars/defaults.yml'
  tasks:
  - include_role:
      name: sneakernet
      tasks_from: connected

- name: Sneakernet clients and oc-mirror data onto disconnected host
  hosts: bastion
  vars_files:
  - '{{ playbook_dir }}/vars/defaults.yml'
  tasks:
  - include_role:
      name: sneakernet
      tasks_from: disconnected
